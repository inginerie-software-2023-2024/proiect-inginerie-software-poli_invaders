name: Unity Test and Coverage

on:
  push:
    branches:
      - main

jobs:
  test:
    name: Run Unity Tests
    runs-on: ubuntu-latest

    env:
      UNITY_LICENSE: ${{ secrets.UNITY_LICENSE }}

    steps:
    - name: Checkout code
      uses: actions/checkout@v2

    - name: Run Unity tests and generate coverage
      id: custom_unity_version_test
      run: |
        # Unity.exe -projectPath <path-to-project> -batchmode -testPlatform editmode -runTests -testResults <path-to-results-xml> -debugCodeOptimization -enableCodeCoverage -coverageResultsPath <path-to-coverage-results>-coverageOptions enableCyclomaticComplexity;generateHtmlReport;generateBadgeReport;assemblyFilters:+my.assembly.*,-UnityEditor*;pathFilters:-*Packages*
        coveragePath="./coverage-results"
        echo "::set-output name=coveragePath::$coveragePath"

  upload_results:
    name: Upload Test and Coverage Results
    runs-on: ubuntu-latest
    needs:
      - test

    steps:
    - name: Upload Test results
      uses: actions/upload-artifact@v3
      if: always()
      with:
        name: Test results
        path: ./artifacts

    - name: Upload Coverage results
      uses: actions/upload-artifact@v3
      if: always()
      with:
        name: Coverage results
        path: ${{ steps.custom_unity_version_test.outputs.coveragePath }}
